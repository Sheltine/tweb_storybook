{"ast":null,"code":"var _jsxFileName = \"/home/johanna/Documents/Cours/S5/TWEB/labo_react/my-app/src/components/tables2.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Issue from '../issue';\nimport { Glyphicon } from 'react-bootstrap';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      width: '100%',\n      marginTop: theme.spacing.unit * 3,\n      overflowX: 'auto'\n    },\n    table: {\n      minWidth: 700\n    }\n  };\n};\n\nvar id = 0;\n\nfunction createData(id, name, time, issue, comments) {\n  id += 1;\n  return {\n    id: id,\n    name: name,\n    time: time,\n    issue: issue,\n    comments: comments\n  };\n}\n\nvar rows = [createData(new Issue(\"12973\", \"Sheltine\", \"2 days ago\", \"Unable to run app\", \"3\")), createData('Ice cream sandwich', 237, 9.0, 37, 4.3), createData('Eclair', 262, 16.0, 24, 6.0), createData('Cupcake', 305, 3.7, 67, 4.3), createData('Gingerbread', 356, 16.0, 49, 3.9)];\n\nfunction SimpleTable(props) {\n  var classes = props.classes;\n  return React.createElement(Paper, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Glyphicon, {\n    glyph: \"exclamation-sign\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), \"640 Open \", React.createElement(Glyphicon, {\n    glyph: \"ok\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })), React.createElement(TableCell, {\n    numeric: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Calories\"), React.createElement(TableCell, {\n    numeric: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Fat (g)\"), React.createElement(TableCell, {\n    numeric: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Carbs (g)\"), React.createElement(TableCell, {\n    numeric: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Protein (g)\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, rows.map(function (row) {\n    return React.createElement(TableRow, {\n      key: row.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, row.name), React.createElement(TableCell, {\n      numeric: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, row.calories), React.createElement(TableCell, {\n      numeric: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, row.fat), React.createElement(TableCell, {\n      numeric: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, row.carbs), React.createElement(TableCell, {\n      numeric: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, row.protein));\n  }))));\n}\n\nSimpleTable.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(SimpleTable);","map":{"version":3,"sources":["/home/johanna/Documents/Cours/S5/TWEB/labo_react/my-app/src/components/tables2.jsx"],"names":["React","PropTypes","withStyles","Table","TableBody","TableCell","TableHead","TableRow","Paper","Issue","Glyphicon","styles","theme","root","width","marginTop","spacing","unit","overflowX","table","minWidth","id","createData","name","time","issue","comments","rows","SimpleTable","props","classes","map","row","calories","fat","carbs","protein","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Issue from '../issue'\nimport { Glyphicon } from 'react-bootstrap'\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing.unit * 3,\n    overflowX: 'auto',\n  },\n  table: {\n    minWidth: 700,\n  },\n});\n\nlet id = 0;\nfunction createData(id, name, time, issue, comments) {\n  id += 1;\n  return { id, name, time, issue, comments };\n}\n\nconst rows = [\n  createData(new Issue(\"12973\", \"Sheltine\", \"2 days ago\", \"Unable to run app\", \"3\")),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n  createData('Eclair', 262, 16.0, 24, 6.0),\n  createData('Cupcake', 305, 3.7, 67, 4.3),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n];\n\nfunction SimpleTable(props) {\n  const { classes } = props;\n\n  return (\n    <Paper className={classes.root}>\n      <Table className={classes.table}>\n        <TableHead>\n          <TableRow>\n          <TableCell><Glyphicon glyph=\"exclamation-sign\"/>640 Open <Glyphicon glyph=\"ok\"/></TableCell>\n            <TableCell numeric>Calories</TableCell>\n            <TableCell numeric>Fat (g)</TableCell>\n            <TableCell numeric>Carbs (g)</TableCell>\n            <TableCell numeric>Protein (g)</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map(row => {\n            return (\n              <TableRow key={row.id}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.name}\n                </TableCell>\n                <TableCell numeric>{row.calories}</TableCell>\n                <TableCell numeric>{row.fat}</TableCell>\n                <TableCell numeric>{row.carbs}</TableCell>\n                <TableCell numeric>{row.protein}</TableCell>\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </Paper>\n  );\n}\n\nSimpleTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SimpleTable);\n"]},"metadata":{},"sourceType":"module"}