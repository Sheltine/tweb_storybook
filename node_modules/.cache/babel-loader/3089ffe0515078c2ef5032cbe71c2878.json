{"ast":null,"code":"'use strict';\n\nvar TYPES = {\n  array: 'Array',\n  object: 'Object',\n  string: 'String',\n  date: 'Date',\n  regExp: 'RegExp',\n  function: 'Function',\n  boolean: 'Boolean',\n  number: 'Number',\n  null: 'Null',\n  undefined: 'Undefined'\n};\n\nvar getType = function getType(obj) {\n  return Object.prototype.toString.call(obj).slice(8, -1);\n};\n\nvar isArray = function isArray(obj) {\n  return getType(obj) === TYPES.array;\n};\n\nvar isObject = function isObject(obj) {\n  return getType(obj) === TYPES.object;\n};\n\nvar isString = function isString(obj) {\n  return getType(obj) === TYPES.string;\n};\n\nvar isDate = function isDate(obj) {\n  return getType(obj) === TYPES.date;\n};\n\nvar isRegExp = function isRegExp(obj) {\n  return getType(obj) === TYPES.regExp;\n};\n\nvar isFunction = function isFunction(obj) {\n  return getType(obj) === TYPES.function;\n};\n\nvar isBoolean = function isBoolean(obj) {\n  return getType(obj) === TYPES.boolean || isString(obj) && (obj === 'true' || obj === 'false');\n};\n\nvar isNumber = function isNumber(obj) {\n  return getType(obj) === TYPES.number && !Number.isNaN(obj);\n};\n\nvar isNull = function isNull(obj) {\n  return getType(obj) === TYPES.null || getType(obj) === TYPES.undefined;\n};\n\nvar isEmpty = function isEmpty(obj) {\n  if (isString(obj)) return obj.trim() === '';\n  if (isArray(obj)) return obj.length === 0;\n  if (isObject(obj)) return Object.keys(obj).length === 0;\n  return isNull(obj);\n};\n\nvar isEmptyOrZero = function isEmptyOrZero(obj) {\n  return isEmpty(obj) || isNumber(obj) && obj === 0;\n};\n\nmodule.exports = {\n  isArray: isArray,\n  isObject: isObject,\n  isString: isString,\n  isDate: isDate,\n  isRegExp: isRegExp,\n  isFunction: isFunction,\n  isBoolean: isBoolean,\n  isNumber: isNumber,\n  isNull: isNull,\n  isEmpty: isEmpty,\n  isEmptyOrZero: isEmptyOrZero\n};","map":null,"metadata":{},"sourceType":"script"}